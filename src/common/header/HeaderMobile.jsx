import React, { useState } from 'react';
import NavMobile from './NavMobile';
import { useNavigate } from 'react-router-dom';

const HeaderMobile = () => {
    const [menuOpen, setMenuOpen] = useState(false);
    const navigate = useNavigate();
    return (
        <header id="headerMobile">
            <div className="inner">
                <div className="menu" onClick={() => setMenuOpen(true)}>
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="18"
                        height="12"
                        viewBox="0 0 18 12"
                        fill="none"
                    >
                        <path
                            d="M1 12C0.447716 12 0 11.5523 0 11C0 10.4477 0.447715 10 1 10H17C17.5523 10 18 10.4477 18 11C18 11.5523 17.5523 12 17 12H1ZM1 7C0.447716 7 0 6.55228 0 6C0 5.44772 0.447715 5 1 5H17C17.5523 5 18 5.44772 18 6C18 6.55228 17.5523 7 17 7H1ZM1 2C0.447716 2 0 1.55228 0 1C0 0.447715 0.447715 0 1 0H17C17.5523 0 18 0.447715 18 1C18 1.55228 17.5523 2 17 2H1Z"
                            fill="#292929"
                        />
                    </svg>
                </div>
                <div
                    className="logo"
                    onClick={() => {
                        navigate('/');
                    }}
                >
                    <img src="/main/Logo-confirmed.png" alt="Logo" />
                </div>
                <div className="icon">
                    <div className="login">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="20"
                            height="20"
                            viewBox="0 0 20 20"
                            fill="none"
                        >
                            <path
                                d="M13.2006 10.8374C14.4317 11.4186 15.4814 12.3238 16.2371 13.4561C16.9929 14.5884 17.4262 15.9051 17.4906 17.2649C17.4992 17.3895 17.4828 17.5145 17.4424 17.6327C17.402 17.7508 17.3384 17.8597 17.2554 17.9529C17.1723 18.0461 17.0715 18.1219 16.9588 18.1756C16.8461 18.2293 16.7238 18.26 16.5991 18.2658C16.4744 18.2717 16.3497 18.2525 16.2325 18.2095C16.1153 18.1665 16.0078 18.1006 15.9165 18.0155C15.8251 17.9304 15.7516 17.8279 15.7004 17.7141C15.6491 17.6002 15.6212 17.4773 15.6181 17.3524C15.55 15.9081 14.9282 14.5455 13.882 13.5474C12.8357 12.5493 11.4453 11.9925 9.99935 11.9925C8.5534 11.9925 7.16298 12.5493 6.11673 13.5474C5.07047 14.5455 4.44874 15.9081 4.3806 17.3524C4.36376 17.5969 4.25186 17.8251 4.06887 17.9881C3.88588 18.1511 3.64634 18.2359 3.40155 18.2245C3.15676 18.2131 2.92618 18.1062 2.75919 17.9269C2.59219 17.7475 2.50206 17.5099 2.5081 17.2649C2.57238 15.9052 3.00551 14.5887 3.76103 13.4564C4.51656 12.3241 5.566 11.4187 6.79685 10.8374C6.00811 10.1795 5.44118 9.29466 5.17316 8.30315C4.90515 7.31165 4.94906 6.26164 5.29893 5.29598C5.6488 4.33031 6.28764 3.49585 7.12855 2.90612C7.96947 2.31639 8.97163 2 9.99872 2C11.0258 2 12.028 2.31639 12.8689 2.90612C13.7098 3.49585 14.3486 4.33031 14.6985 5.29598C15.0484 6.26164 15.0923 7.31165 14.8243 8.30315C14.5563 9.29466 13.9893 10.1795 13.2006 10.8374ZM13.1243 6.99618C13.1243 6.16738 12.7951 5.37253 12.2091 4.78648C11.623 4.20042 10.8281 3.87118 9.99935 3.87118C9.17055 3.87118 8.37569 4.20042 7.78964 4.78648C7.20359 5.37253 6.87435 6.16738 6.87435 6.99618C6.87435 7.82499 7.20359 8.61984 7.78964 9.20589C8.37569 9.79194 9.17055 10.1212 9.99935 10.1212C10.8281 10.1212 11.623 9.79194 12.2091 9.20589C12.7951 8.61984 13.1243 7.82499 13.1243 6.99618Z"
                                fill="#292929"
                            />
                        </svg>
                    </div>
                    <div className="search">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="20"
                            height="20"
                            viewBox="0 0 20 20"
                            fill="none"
                        >
                            <path
                                d="M13.7323 12.3185H12.9909L12.7281 12.0653C13.3146 11.3843 13.7433 10.5822 13.9834 9.71636C14.2235 8.8505 14.2691 7.94231 14.1171 7.05676C13.676 4.44933 11.4987 2.36714 8.87099 2.04825C7.94717 1.93144 7.00885 2.0274 6.12785 2.32877C5.24684 2.63014 4.4465 3.12894 3.78805 3.787C3.1296 4.44506 2.63051 5.24494 2.32896 6.12543C2.02741 7.00592 1.9314 7.94368 2.04827 8.86696C2.36736 11.4931 4.45077 13.6691 7.05973 14.11C7.94579 14.2619 8.85452 14.2163 9.72088 13.9764C10.5872 13.7364 11.3898 13.308 12.0712 12.7218L12.3246 12.9844V13.7254L16.3131 17.7116C16.6979 18.0961 17.3266 18.0961 17.7114 17.7116C18.0962 17.327 18.0962 16.6986 17.7114 16.3141L13.7323 12.3185ZM8.10144 12.3185C5.76464 12.3185 3.8783 10.4333 3.8783 8.09786C3.8783 5.76243 5.76464 3.8772 8.10144 3.8772C10.4382 3.8772 12.3246 5.76243 12.3246 8.09786C12.3246 10.4333 10.4382 12.3185 8.10144 12.3185Z"
                                fill="#292929"
                            />
                        </svg>
                    </div>
                </div>
            </div>
            {menuOpen && (
                <>
                    {/* 배경 오버레이 */}
                    <div className="overlay" onClick={() => setMenuOpen(false)} />

                    {/* 사이드 메뉴 */}
                    <div className={`side-menu ${menuOpen ? 'open' : ''}`}>
                        <button className="close-btn" onClick={() => setMenuOpen(false)}>
                            ✕
                        </button>
                        <NavMobile onClose={() => setMenuOpen(false)} />
                    </div>
                </>
            )}
        </header>
    );
};

export default HeaderMobile;
